<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    <bean id="sampleRelay" class="com.flipkart.aesop.runtime.relay.DefaultRelayFactory">
        <property name="relayConfig" ref="relayConfig"/>
        <property name="producerRegistrationList">
            <list>
                <bean class="com.flipkart.aesop.runtime.config.InitBackedProducerRegistration">
                    <property name="properties">
                        <bean id="productRegistrationPropertiesFactory" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
                            <property name="singleton" value="true"/>
                            <property name="properties">
                                <props>
                                    <prop key="databus.relay.dataSources.sequenceNumbersHandler.file.initVal">4294967300</prop>
                                </props>
                            </property>
                        </bean>
                    </property>
                    <property name="eventProducer" ref="mysqlPersonProducer"/>
                    <property name="physicalSourceConfig" ref="physicalSourceConfig"/>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="mysqlPersonProducer" class="com.flipkart.aesop.runtime.producer.MysqlEventProducer">
        <property name="physicalSourceConfig" ref="physicalSourceConfig"/>
        <property name="eventsMap" ref="eventsMapRef"/>
        <property name="binLogEventMappers" ref="binLogEventMappersRef"/>
        <property name="schemaChangeEventProcessor">
            <bean class="com.flipkart.aesop.runtime.producer.schema.eventprocessor.impl.NopSchemaChangeEventProcessor" />
        </property>
    </bean>

    <bean id="orToAvroMapper" class="com.flipkart.aesop.runtime.producer.mapper.impl.ORToAvroMapper"/>

    <util:map id="eventsMapRef" key-type="java.lang.Integer" value-type="com.flipkart.aesop.runtime.producer.eventprocessor.BinLogEventProcessor">
        <entry key="#{T(com.flipkart.aesop.runtime.producer.constants.MySQLConstants).QUERY_EVENT}" value-ref="mutatingQueryEventProcessor"/>
        <entry key="#{T(com.flipkart.aesop.runtime.producer.constants.MySQLConstants).ROTATE_EVENT}" value-ref="rotateEventProcessor"/>
        <entry key="#{T(com.flipkart.aesop.runtime.producer.constants.MySQLConstants).XID_EVENT}" value-ref="commitEventProcessor"/>
        <entry key="#{T(com.flipkart.aesop.runtime.producer.constants.MySQLConstants).TABLE_MAP_EVENT}" value-ref="tableMapEventProcessor"/>
        <entry key="#{T(com.flipkart.aesop.runtime.producer.constants.MySQLConstants).WRITE_ROWS_EVENT}" value-ref="insertEventProcessor"/>
        <entry key="#{T(com.flipkart.aesop.runtime.producer.constants.MySQLConstants).UPDATE_ROWS_EVENT}" value-ref="updateEventProcessor"/>
        <entry key="#{T(com.flipkart.aesop.runtime.producer.constants.MySQLConstants).DELETE_ROWS_EVENT}" value-ref="deleteEventProcessor"/>
        <entry key="#{T(com.flipkart.aesop.runtime.producer.constants.MySQLConstants).WRITE_ROWS_EVENT_V2}" value-ref="insertEventV2Processor"/>
        <entry key="#{T(com.flipkart.aesop.runtime.producer.constants.MySQLConstants).UPDATE_ROWS_EVENT_V2}" value-ref="updateEventV2Processor"/>
        <entry key="#{T(com.flipkart.aesop.runtime.producer.constants.MySQLConstants).DELETE_ROWS_EVENT_V2}" value-ref="deleteEventV2Processor"/>
    </util:map>

    <bean id="mutatingQueryEventProcessor" class="com.flipkart.aesop.runtime.producer.eventprocessor.impl.MutatingQueryEventProcessor"/>
    <bean id="rotateEventProcessor" class="com.flipkart.aesop.runtime.producer.eventprocessor.impl.RotateEventProcessor"/>
    <bean id="commitEventProcessor" class="com.flipkart.aesop.runtime.producer.eventprocessor.impl.CommitEventProcessor"/>
    <bean id="tableMapEventProcessor" class="com.flipkart.aesop.runtime.producer.eventprocessor.impl.TableMapEventProcessor"/>
    <bean id="insertEventProcessor" class="com.flipkart.aesop.runtime.producer.eventprocessor.impl.InsertEventProcessor"/>
    <bean id="updateEventProcessor" class="com.flipkart.aesop.runtime.producer.eventprocessor.impl.UpdateEventProcessor"/>
    <bean id="deleteEventProcessor" class="com.flipkart.aesop.runtime.producer.eventprocessor.impl.DeleteEventProcessor"/>
    <bean id="insertEventV2Processor" class="com.flipkart.aesop.runtime.producer.eventprocessor.impl.InsertEventV2Processor"/>
    <bean id="updateEventV2Processor" class="com.flipkart.aesop.runtime.producer.eventprocessor.impl.UpdateEventV2Processor"/>
    <bean id="deleteEventV2Processor" class="com.flipkart.aesop.runtime.producer.eventprocessor.impl.DeleteEventV2Processor"/>

    <util:map id="binLogEventMappersRef" key-type="java.lang.Integer" value-type="com.flipkart.aesop.runtime.producer.mapper.BinLogEventMapper">
        <entry key="40" value-ref="defaultBinLogEventMapper"/>
    </util:map>
    <bean id="defaultBinLogEventMapper" class="com.flipkart.aesop.runtime.producer.mapper.impl.DefaultBinLogEventMapper">
        <property name="orToAvroMapper" ref="orToAvroMapper"/>
    </bean>

    <bean id="physicalSourceConfig" class="com.linkedin.databus2.relay.config.PhysicalSourceConfig">
        <property name="id" value="1"/>
        <property name="name" value="personPhysicalSource"/>
        <property name="uri" value="mysql://or_test%2For_test@localhost:3306/12345/mysql-bin"/>
        <property name="sources">
            <list>
                <bean id="logicalSourceConfig" class="com.linkedin.databus2.relay.config.LogicalSourceConfig">
                    <property name="id" value="41"/>
                    <property name="name" value="com.flipkart.aesop.events.ortest.Person"/>
                    <property name="uri" value="or_test.person"/>
                    <property name="partitionFunction" value="constant:1"/>
                </bean>
            </list>
        </property>
    </bean>

    <bean id="relayConfig" class="com.flipkart.aesop.runtime.config.RelayConfig">
        <property name="relayProperties">
            <bean id="relayPropertiesFactory" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
                <property name="singleton" value="true"/>
                <property name="properties">
                    <props>
                        <prop key="databus.relay.container.httpPort">25021</prop>
                        <prop key="databus.relay.container.jmx.rmiEnabled">false</prop>
                        <prop key="databus.relay.eventBuffer.allocationPolicy">MMAPPED_MEMORY</prop>
                        <prop key="databus.relay.eventBuffer.queuePolicy">OVERWRITE_ON_WRITE</prop>
                        <prop key="databus.relay.eventLogReader.enabled">false</prop>
                        <prop key="databus.relay.eventLogWriter.enabled">false</prop>
                        <prop key="databus.relay.schemaRegistry.type">FILE_SYSTEM</prop>
                        <prop key="databus.relay.eventBuffer.maxSize">10240000</prop>
                        <prop key="databus.relay.eventBuffer.readBufferSize">10240</prop>
                        <prop key="databus.relay.eventBuffer.scnIndexSize">10240000</prop>
                        <prop key="databus.relay.eventBuffer.restoreMMappedBuffers">true</prop>
                        <!-- <prop key ="databus.relay.dataSources.sequenceNumbersHandler.file.initVal">4294967300</prop> -->
                    </props>
                </property>
            </bean>
        </property>
        <property name="schemaRegistryLocation" value="schemas_registry"/>
        <property name="mmappedDirectoryLocation" value="/tmp/sandbox/mmapped_directory"/> <!-- This is relative to projects root -->
        <property name="maxScnDirectoryLocation" value="/tmp/sandbox/maxscn_directory"/> <!-- This is relative to projects root -->
    </bean>

</beans>